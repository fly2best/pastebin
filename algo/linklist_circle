
链表判断环是个经典的面试题

标准解法是用快慢指针来判断是否有环.
时间复杂度O(n) n是链表的长度.

时间复杂度证明:
当进入慢指针进入环后, 每移动一次, 快指针移动两次, 他们之间的距离减小1.
进入环时, 他们呢之间距离不会超过的环的长度, 移动次数也不会超过环的长度.

因此总的慢指针的移动次数不会超过链表的长度, 时间复杂度为O(n).

怎么求环的入口结点?
设进入环之前的长度为x, 从环口到相遇结点的距离是y, 从相遇结点到环口的距离是z.

则有 慢指针走过的距离为x+y, 快指针走过的距离是2(x+y).
2(x+y) = (x+y) + n * (y+z)
(x+y) = n * (y+z)

x = (n-1)(y+z) + z
x % (y+z) = z

因此在环上, 走x步相当与绕了xx圈后, 再走z步.

so, 一个指针从链表头结点开始往后走(距离环扣x步), 一个结点从相遇结点开始走(距离环口z步)
但走x步后, 必定相遇.

就求出了环入口结点的位置.
以前弄明白一次, 忘了, 再想有占用不少时间, 还是整理整理吧.

求环的入口结点还有一种方法
1. 从相遇结点把俩表断开, 保存后继结点的指针
2. 从相遇结点把链表逆过来
3. 问题转化为Y子型, 的两个链表的第一个交点
稍微啰嗦一点, 但我觉得思路也相当清晰.

