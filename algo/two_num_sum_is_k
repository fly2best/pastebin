
有一个递增排序的数组 和一个数字s, 在数组中查找两个数, 使它们的和正好是s.

这题目的思路是这样子的.

设最小的数为a, 最大的数为b.

如果a + b > s:
    因为a是最小的, b和任意其他的数的和还是大于s
    所以舍弃b
    转化为子问题
else 如果a + b < s:
    因为b是最大的, a和任意其他的数的和还是小于s
    所以舍弃a
    转化为子问题
else 
     找到了呗....

因为是经过排序的递增数组.

所以可以在O(1)的转化为子问题, 规模减小1.
所以T(n) = T(n-1) + O(1)

T(n) = O(n)

算法终止条件, 子问题的规模为2.

具体实现, 就可以用两个指针, 一个指向最前, 一个指向最后.

如果两数之和大于s, 后面的指针减1, 如果小于前面的指针加1, 否则找到了呗.

前面的指针要始终小于后面的指针.

