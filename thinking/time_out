超时的处理

不想无限等待, 你最好处理超时.

A调用了B.

B可能阻塞, 那么A也可能会阻塞下去的.

如果不想永远等待下去，那就要处理一个超时事件.

可以是B处理或者A处理.

这样,就不会出现永远等待了.

但是让谁处理处理呢. 随便,　只要有人处理, 就行.

但是如果A依赖与B的处理, 那么B就要提供一种保证, 就是可靠的.

可靠的意思是, 如果超时了, 要保证告诉A, 否则应该返回正确结果.
可能出现一种就是情况, B直接崩了, 没有告诉A, 那A就会无限等待下去.

因此,如果不能保证B是可靠的, 那么A也要处理超时事件.

在网络编程中, 如果请求了一个消息, 等待返回, 应该加一个超时事件,否则可能无限等待.

如果确实发生了超时, 那怎么处理呢?
1. 直接返回错误结果.
2. 重试几次, 如果依然错误, 返回错误结果.
